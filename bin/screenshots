#!/usr/bin/env node

const { Parcel } = require('@parcel/core')
const Path = require('path')
const puppeteer = require('puppeteer')

const defaultViewport = { width: 600, height: 600 }
const customViewports = {
  4: { width: 800, height: 800 },
}

;(async function () {
  const port = 4321
  const bundler = new Parcel({
    defaultConfig: '@parcel/config-default',
    entries: Path.join(__dirname, '../index.html'),
    serveOptions: { port },
  })

  const subscription = await bundler.watch(async (err, event) => {
    if (err) throw err

    if (event.type === 'buildFailure') {
      console.log(event)
    } else if (event.type === 'buildSuccess') {
      const bundles = event.bundleGraph.getBundles()
      const names = bundles
        .map(entry => entry.name)
        .filter(name => name.endsWith('.html'))
        .filter(name => name !== 'index.html')

      const browser = await puppeteer.launch({ headless: 'new' })
      const page = await browser.newPage()

      for (name of names) {
        const id = Path.basename(name, '.html')
        const pathname = Path.join('/clocks', name)
        const path = Path.join(__dirname, `../tmp/${id}.png`)

        await page.setViewport(customViewports[id] || defaultViewport)
        await page.goto(`http://localhost:${port}${pathname}`)
        await page.screenshot({ path })
      }

      await browser.close()
    }

    subscription.unsubscribe()
  })
})()
